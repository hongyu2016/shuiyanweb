{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\config\\adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "mysql",
        "Console",
        "File",
        "DateFile",
        "path",
        "isDev",
        "think",
        "env",
        "socketio",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "database",
        "prefix",
        "encoding",
        "host",
        "port",
        "user",
        "password",
        "dateStrings",
        "insecureAuth",
        "session",
        "cookie",
        "name",
        "sessionPath",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern",
        "websocket",
        "adapter",
        "messages",
        "open",
        "close",
        "getNotice"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\common\\config\\adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\r\nconst nunjucks = require('think-view-nunjucks');\r\nconst fileSession = require('think-session-file');\r\nconst mysql = require('think-model-mysql');\r\nconst {Console, File, DateFile} = require('think-logger3');\r\nconst path = require('path');\r\nconst isDev = think.env === 'development';\r\nconst socketio = require('think-websocket-socket.io');//websocket\r\n/**\r\n * cache adapter config\r\n * @type {Object}\r\n */\r\nexports.cache = {\r\n    type: 'file',\r\n    common: {\r\n        timeout: 24 * 60 * 60 * 1000 // millisecond\r\n    },\r\n    file: {\r\n        handle: fileCache,\r\n        cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\r\n        pathDepth: 1,\r\n        gcInterval: 24 * 60 * 60 * 1000 // gc interval\r\n    }\r\n};\r\n\r\n/**\r\n * model adapter config\r\n * @type {Object}\r\n */\r\nexports.model = {\r\n    type: 'mysql',\r\n    common: {\r\n        logConnect: isDev,\r\n        logSql: isDev,\r\n        logger: msg => think.logger.info(msg)\r\n    },\r\n    mysql: {\r\n        handle: mysql,\r\n        database: 'shuiyan',\r\n        prefix: 'sy_',\r\n        encoding: 'utf8',\r\n        //host: '127.0.0.1',\r\n        host: '127.0.0.1',\r\n        port: '3306',\r\n        user: 'root',\r\n        password: 'root',\r\n        dateStrings: true,\r\n        insecureAuth: true,  //加上这个 避免 出现版本过低和不安全的报错\r\n    }\r\n};\r\n\r\n/**\r\n * session adapter config\r\n * @type {Object}\r\n */\r\nexports.session = {\r\n    type: 'file',\r\n    common: {\r\n        cookie: {\r\n            name: 'thinkjs'\r\n            // keys: ['werwer', 'werwer'],\r\n            // signed: true\r\n        }\r\n    },\r\n    file: {\r\n        handle: fileSession,\r\n        sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\r\n    }\r\n};\r\n\r\n/**\r\n * view adapter config\r\n * @type {Object}\r\n */\r\nexports.view = {\r\n    type: 'nunjucks',\r\n    common: {\r\n        viewPath: path.join(think.ROOT_PATH, 'view'),\r\n        sep: '_',\r\n        extname: '.html'\r\n    },\r\n    nunjucks: {\r\n        handle: nunjucks\r\n    }\r\n};\r\n\r\n/**\r\n * logger adapter config\r\n * @type {Object}\r\n */\r\nexports.logger = {\r\n    type: isDev ? 'console' : 'dateFile',\r\n    console: {\r\n        handle: Console\r\n    },\r\n    file: {\r\n        handle: File,\r\n        backups: 10, // max chunk number\r\n        absolute: true,\r\n        maxLogSize: 50 * 1024, // 50M\r\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\r\n    },\r\n    dateFile: {\r\n        handle: DateFile,\r\n        level: 'ALL',\r\n        absolute: true,\r\n        pattern: '-yyyy-MM-dd',\r\n        alwaysIncludePattern: true,\r\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\r\n    }\r\n};\r\n\r\n/**\r\n* websocket\r\n* @type {object}\r\n* */\r\nexports.websocket = {\r\n\ttype: 'socketio',\r\n\tcommon: {\r\n\t\t// common config\r\n\t},\r\n\tsocketio: {\r\n\t\thandle: socketio,\r\n\t\t//allowOrigin: 'http://127.0.0.1:8080',  // 默认所有的域名都允许访问\r\n\t\tpath: '/socket.io',             // 默认 '/socket.io' /api/websocket/getNotice\r\n\t\tadapter: null,                  // 默认无 adapter\r\n\t\tmessages: [{\r\n\t\t\topen: '/api/websocket/open',\r\n\t\t\tclose: '/api/websocket/close',\r\n\t\t\tgetNotice: '/api/websocket/getNotice'\r\n\t\t}]\r\n\t}\r\n};\r\n"
    ]
}