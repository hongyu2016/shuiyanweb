{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\news_sort.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "constructor",
        "args",
        "modelInstance",
        "model",
        "indexAction",
        "sortList",
        "select",
        "assign",
        "display",
        "addAction",
        "sortId",
        "ctx",
        "param",
        "editSort",
        "where",
        "sort_id",
        "find",
        "addsortAction",
        "isGet",
        "sortName",
        "get",
        "editId",
        "userInfo",
        "session",
        "userName",
        "admin_name",
        "insertId",
        "success",
        "data",
        "addSort",
        "deleteAction",
        "offectedRows",
        "delete"
    ],
    "mappings": ";;AAAA;;;AAGA,MAAMA,OAAKC,QAAQ,QAAR,CAAX;AACAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAChC;;;AAGAI,gBAAY,GAAGC,IAAf,EAAqB;AACjB,cAAM,GAAGA,IAAT,EADiB,CACF;AACf,aAAKC,aAAL,GAAqB,KAAKC,KAAL,CAAW,WAAX,CAArB,CAFiB,CAE6B;AACjD;AACD;;;AAGMC,eAAN,GAAoB;AAAA;;AAAA;AAChB;AACA,gBAAIC,WAAS,MAAM,MAAKF,KAAL,CAAW,WAAX,EAAwBG,MAAxB,EAAnB;AACA,kBAAKC,MAAL,CAAY,UAAZ,EAAuBF,QAAvB;AACA,mBAAO,MAAKG,OAAL,EAAP;AAJgB;AAKnB;AACD;;;AAGMC,aAAN,GAAiB;AAAA;;AAAA;AACb;AACA,gBAAIC,SAAO,OAAKC,GAAL,CAASC,KAAT,CAAe,SAAf,CAAX;AACA,gBAAGF,MAAH,EAAU;AACN,oBAAIG,WAAS,MAAM,OAAKV,KAAL,CAAW,WAAX,EAAwBW,KAAxB,CAA8B,EAACC,SAAQL,MAAT,EAA9B,EAAgDM,IAAhD,EAAnB;AACA,uBAAKT,MAAL,CAAY,UAAZ,EAAuBM,QAAvB;AACH;AACD,mBAAO,OAAKL,OAAL,EAAP;AAPa;AAQhB;AACD;;;AAGMS,iBAAN,GAAqB;AAAA;;AAAA;AACjB,gBAAG,OAAKC,KAAR,EAAc;AACV;AACA,oBAAIC,WAAS,OAAKC,GAAL,CAAS,WAAT,CAAb;AACH,oBAAIC,SAAO,OAAKD,GAAL,CAAS,QAAT,CAAX;AACG,oBAAIE,WAAS,MAAM,OAAKC,OAAL,CAAa,UAAb,CAAnB;AACA,oBAAIC,WAASF,SAASG,UAAtB;AACA,oBAAGJ,UAAQ,GAAR,IAAeA,UAAQ,CAA1B,EAA4B;AAC3B;AACA,wBAAIK,WAAS,MAAM,OAAKxB,aAAL,CAAmBW,QAAnB,CAA4BQ,MAA5B,EAAmCF,QAAnC,EAA4CK,QAA5C,CAAnB;AACA,wBAAGE,QAAH,EAAY;AACX,+BAAKC,OAAL,CAAa,EAACC,MAAKF,QAAN,EAAb,EAA6B,MAA7B;AACA,qBAFD,MAEM;AACL,+BAAKC,OAAL,CAAa,MAAb;AACA;AACD,iBARD,MAQM;AACL,wBAAID,WAAS,MAAM,OAAKxB,aAAL,CAAmB2B,OAAnB,CAA2BV,QAA3B,EAAoCK,QAApC,CAAnB;AACA,wBAAGE,QAAH,EAAY;AACX,+BAAKC,OAAL,CAAa,EAACC,MAAKF,QAAN,EAAb,EAA6B,MAA7B;AACA,qBAFD,MAEM;AACL,+BAAKC,OAAL,CAAa,MAAb;AACA;AACD;AAEJ;AAxBgB;AAyBpB;AACD;;;AAGMG,gBAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAG,OAAKZ,KAAR,EAAc;AACV,oBAAIR,SAAO,OAAKU,GAAL,CAAS,SAAT,CAAX;AACA,oBAAIjB,QAAM,OAAKA,KAAL,CAAW,WAAX,CAAV;AACA,oBAAI4B,eAAe,MAAM5B,MAAMW,KAAN,CAAY,EAACC,SAAQL,MAAT,EAAZ,EAA8BsB,MAA9B,EAAzB;AACA,oBAAGD,YAAH,EAAgB;AACZ,2BAAKJ,OAAL,CAAa,EAACC,MAAKG,YAAN,EAAb,EAAiC,MAAjC;AACH,iBAFD,MAEK;AACD,2BAAKJ,OAAL,CAAa,MAAb;AACH;AAEJ;AAXe;AAYnB;AAzE+B,CAApC",
    "file": "..\\..\\..\\src\\admin\\controller\\news_sort.js",
    "sourcesContent": [
        "/**\n * Created by Administrator on 2017/11/17.\n */\nconst Base=require('./base');\nmodule.exports = class extends Base {\n    /*\n    * 构造函数 便于使用model文件\n    * */\n    constructor(...args) {\n        super(...args);//调用父级的 constructor 方法\n        this.modelInstance = this.model('news_sort'); //增加一个方法\n    }\n    /*\n    * 栏目列表\n    * */\n    async indexAction() {\n        //显示添加页面\n        let sortList=await this.model('news_sort').select();\n        this.assign('sortList',sortList);\n        return this.display();\n    }\n    /*\n    * 更新/添加栏目\n    * */\n    async addAction(){\n        //如果sort-id存在 则是编辑栏目\n        let sortId=this.ctx.param('sort-id');\n        if(sortId){\n            let editSort=await this.model('news_sort').where({sort_id:sortId}).find();\n            this.assign('editSort',editSort);\n        }\n        return this.display();\n    }\n    /*\n    * 添加栏目 更新栏目\n    * */\n    async addsortAction(){\n        if(this.isGet){\n            //get请求\n            let sortName=this.get('sort-name');\n\t        let editId=this.get('editId');\n            let userInfo=await this.session('userinfo');\n            let userName=userInfo.admin_name;\n            if(editId!='0' || editId!=0){\n            \t//编辑\n\t            let insertId=await this.modelInstance.editSort(editId,sortName,userName);\n\t            if(insertId){\n\t\t            this.success({data:insertId},'修改成功');\n\t            }else {\n\t\t            this.success('修改失败');\n\t            }\n            }else {\n\t            let insertId=await this.modelInstance.addSort(sortName,userName);\n\t            if(insertId){\n\t\t            this.success({data:insertId},'添加成功');\n\t            }else {\n\t\t            this.success('添加失败');\n\t            }\n            }\n\n        }\n    }\n    /*\n    * 删除栏目\n    * */\n    async deleteAction(){\n        if(this.isGet){\n            let sortId=this.get('sort-id');\n            let model=this.model('news_sort');\n            let offectedRows = await model.where({sort_id:sortId}).delete();\n            if(offectedRows){\n                this.success({data:offectedRows},'删除成功')\n            }else{\n                this.success('删除失败')\n            }\n\n        }\n    }\n};\n"
    ]
}