{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\login.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "indexAction",
        "display",
        "captchaAction",
        "options",
        "size",
        "ignoreChars",
        "noise",
        "color",
        "background",
        "width",
        "height",
        "fontSize",
        "charPreset",
        "captcha",
        "c",
        "create",
        "success",
        "dologinAction",
        "isPost",
        "username",
        "post",
        "password",
        "data",
        "model",
        "where",
        "admin_name",
        "admin_pass",
        "find",
        "isEmpty",
        "fail",
        "session",
        "logoutAction",
        "redirect"
    ],
    "mappings": "AAAA;;;;;;;;AAEAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,UAApB,CAA+B;AAC9CC,kBAAc;AACV,eAAO,KAAKC,OAAL,EAAP;AACH;AACD;;;AAGEC,oBAAe;AACX,cAAMC,UAAU;AACZC,kBAAM,CADM,EACH;AACTC,yBAAa,EAFD,EAEK;AACjBC,mBAAO,CAHK,EAGF;AACVC,mBAAO,KAJK,EAIE;AACdC,wBAAY,SALA,EAKW;AACvBC,mBAAO,EANK,EAMD;AACXC,oBAAQ,EAPI,EAOA;AACZ;AACAC,sBAAU,EATE,EASE;AACdC,wBAAY,gEAVA,CAUiE;AAVjE,SAAhB;AAYA,YAAIC,UAAQ,8BAAoBV,OAApB,CAAZ;AACA,YAAIW,IAAED,QAAQE,MAAR,EAAN,CAdW,CAca;AACxB,aAAKC,OAAL,CAAa,EAACH,SAAQC,CAAT,EAAb,EAAyB,SAAzB;AACH;;AAEH;;;AAGMG,iBAAN,GAAqB;AAAA;;AAAA;AAClB,gBAAG,MAAKC,MAAR,EAAe;AACX,oBAAIC,WAAS,MAAKC,IAAL,CAAU,UAAV,CAAb,CADW,CACyB;AACpC,oBAAIC,WAAS,MAAKD,IAAL,CAAU,UAAV,CAAb,CAFW,CAEyB;AACpC,oBAAIE,OAAK,MAAM,MAAKC,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B,EAACC,YAAWN,QAAZ,EAAqBO,YAAWL,QAAhC,EAA1B,EAAqEM,IAArE,EAAf,CAHW,CAGiF;AAC5F,oBAAG7B,MAAM8B,OAAN,CAAcN,IAAd,CAAH,EAAuB;AACnB,2BAAO,MAAKO,IAAL,CAAU,GAAV,EAAc,cAAd,CAAP,CADmB,CACkB;AACxC,iBAFD,MAEK;AACD,0BAAKC,OAAL,CAAa,UAAb,EAAwBR,IAAxB;AACA,0BAAKN,OAAL,CAAa,EAACG,UAASA,QAAV,EAAb,EAAiC,MAAjC;AAEH;AACJ;AAZiB;AAcpB;AACC;;;AAGMY,gBAAN,GAAoB;AAAA;;AAAA;AAChB,kBAAM,OAAKD,OAAL,CAAa,IAAb,CAAN;AACA,mBAAKE,QAAL,CAAc,cAAd,EAFgB,CAEc;AAFd;AAGnB;AAjD2C,CAAhD",
    "file": "..\\..\\..\\src\\admin\\controller\\login.js",
    "sourcesContent": [
        "import ThinkSvgCaptcha from 'think-svg-captcha';\n\nmodule.exports = class extends think.Controller {\n  indexAction() {\n      return this.display();\n  }\n  /*\n  * 验证码\n  * */\n    captchaAction(){\n        const options = {\n            size: 4, // size of random string\n            ignoreChars: '', // filter out some characters\n            noise: 1, // number of noise lines\n            color: false, // default grey, true if background option is set\n            background: '#ffffff', // background color of the svg image\n            width: 80, // width of captcha\n            height: 35, // height of captcha\n            //fontPath: './fonts/Comismsh.ttf', // your font path\n            fontSize: 50, // captcha text size\n            charPreset: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' // random character preset\n        };\n        let captcha=new ThinkSvgCaptcha(options);\n        let c=captcha.create(); // returns an object that has the following property: {data: 'svg path data', text: 'captcha text'}\n        this.success({captcha:c},'获取验证码成功');\n    }\n\n  /*\n  * 登陆\n  * */\n  async dologinAction(){\n     if(this.isPost){\n         let username=this.post('username'); //获取用户名\n         let password=this.post('password'); //获取密码\n         let data=await this.model('admin').where({admin_name:username,admin_pass:password}).find(); //查询数据库\n         if(think.isEmpty(data)){\n             return this.fail(403,'账号密码错误！请重新填写');//登陆失败\n         }else{\n             this.session('userinfo',data);\n             this.success({username:username},'登陆成功');\n\n         }\n     }\n\n  }\n    /**\n     * 注销\n     */\n    async logoutAction(){\n        await this.session(null);\n        this.redirect('/index/index');//登录成功将用户信息写入session，返回到user首页。\n    }\n};\n"
    ]
}