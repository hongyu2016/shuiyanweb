{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\news.js"
    ],
    "names": [
        "ThinkUeditor",
        "require",
        "pagination",
        "Base",
        "module",
        "exports",
        "constructor",
        "args",
        "modelInstance",
        "model",
        "indexAction",
        "pageIndex",
        "get",
        "data",
        "indexList",
        "html",
        "ctx",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "assign",
        "display",
        "addAction",
        "sortList",
        "select",
        "newsId",
        "newsData",
        "where",
        "find",
        "uploadAction",
        "ueditor",
        "json",
        "init",
        "doaddAction",
        "isPost",
        "editId",
        "post",
        "sort",
        "title",
        "subTitle",
        "intro",
        "author",
        "content",
        "copyfrom",
        "fail",
        "commonFunion",
        "imgSrc",
        "getSrc",
        "thumb",
        "artitleId",
        "editNews",
        "success",
        "addArticle",
        "deleteAction",
        "isGet",
        "dataId",
        "delete"
    ],
    "mappings": "AAGA;;;;;;;;AAHA;AACA,MAAMA,eAAaC,QAAQ,kCAAR,CAAnB,C,CAAiE;AACjE,MAAMC,aAAaD,QAAQ,kBAAR,CAAnB;AAC8D;AAC9D,MAAME,OAAOF,QAAQ,WAAR,CAAb;;AAEAG,OAAOC,OAAP,GAAiB,cAAcF,IAAd,CAAmB;AAChC;;;AAGAG,gBAAY,GAAGC,IAAf,EAAqB;AACjB,cAAM,GAAGA,IAAT,EADiB,CACF;AACf,aAAKC,aAAL,GAAqB,KAAKC,KAAL,CAAW,MAAX,CAArB,CAFiB,CAEwB;AAC5C;AACH;AACMC,eAAN,GAAoB;AAAA;;AAAA;AAChB;AACA,gBAAIC,YAAU,MAAKC,GAAL,CAAS,MAAT,CAAd;AACA,kBAAMC,OAAO,MAAM,MAAKL,aAAL,CAAmBM,SAAnB,CAA6BH,SAA7B,CAAnB;AACA,kBAAMI,OAAOb,WAAWW,IAAX,EAAiB,MAAKG,GAAtB,EAA2B;AACpCC,sBAAM,KAD8B,EACvB;AACbC,yBAAS,CAF2B;AAGpCC,qBAAK,EAH+B,EAG3B;AACTC,uBAAO,EAJ6B,EAIzB;AACXC,sBAAM;AACFC,0BAAM,KADJ;AAEFC,0BAAM,KAFJ;AAGFC,2BAAO;AAHL;AAL8B,aAA3B,CAAb;AAWA,kBAAKC,MAAL,CAAY,EAAC,cAAaV,IAAd,EAAmB,aAAYF,IAA/B,EAAZ;AACA,mBAAO,MAAKa,OAAL,EAAP;AAhBgB;AAiBnB;AACD;;;AAGQC,aAAN,GAAiB;AAAA;;AAAA;AACb,gBAAIC,WAAS,MAAM,OAAKnB,KAAL,CAAW,WAAX,EAAwBoB,MAAxB,EAAnB;AACA,mBAAKJ,MAAL,CAAY,UAAZ,EAAuBG,QAAvB;AACA,gBAAIE,SAAO,OAAKlB,GAAL,CAAS,SAAT,CAAX;AACA,gBAAGkB,MAAH,EAAU;AAAC;AACP,oBAAIC,WAAS,MAAM,OAAKvB,aAAL,CAAmBwB,KAAnB,CAAyB,EAAC,cAAaF,MAAd,EAAzB,EAAgDG,IAAhD,EAAnB;AACA,uBAAKR,MAAL,CAAY,UAAZ,EAAuBM,QAAvB;AACH;AACD,mBAAO,OAAKL,OAAL,EAAP;AARa;AAShB;AACDQ,mBAAc;AACV;AACA,cAAMC,UAAU,IAAInC,YAAJ,CAAiB,KAAKgB,GAAtB,CAAhB;AACA,aAAKoB,IAAL,CAAUD,QAAQE,IAAR,EAAV;AACH;;AAED;;;AAGMC,eAAN,GAAmB;AAAA;;AAAA;AACf,gBAAG,OAAKC,MAAR,EAAe;AACX,oBAAIC,SAAO,OAAKC,IAAL,CAAU,QAAV,CAAX;AACA,oBAAIC,OAAK,OAAKD,IAAL,CAAU,MAAV,CAAT;AACA,oBAAIE,QAAM,OAAKF,IAAL,CAAU,OAAV,CAAV;AACA,oBAAIG,WAAS,OAAKH,IAAL,CAAU,UAAV,CAAb;AACA,oBAAII,QAAM,OAAKJ,IAAL,CAAU,OAAV,CAAV;AACA,oBAAIK,SAAO,OAAKL,IAAL,CAAU,QAAV,CAAX;AACA,oBAAIM,UAAQ,OAAKN,IAAL,CAAU,SAAV,CAAZ;AACA,oBAAIO,WAAS,OAAKP,IAAL,CAAU,UAAV,CAAb;AACA,oBAAG,CAACC,IAAD,IAASA,QAAM,EAAlB,EAAqB;AACjB,2BAAKO,IAAL,CAAU,GAAV,EAAc,UAAd;AACA,2BAAO,KAAP;AACH;AACD,oBAAG,CAACN,KAAD,IAAUA,SAAO,EAApB,EAAuB;AACnB,2BAAKM,IAAL,CAAU,GAAV,EAAc,UAAd;AACA,2BAAO,KAAP;AACH;AACD,oBAAG,CAACF,OAAD,IAAUA,WAAS,EAAtB,EAAyB;AACrB,2BAAKE,IAAL,CAAU,GAAV,EAAc,UAAd;AACA,2BAAO,KAAP;AACH;AACJ;;AAEA,oBAAIC,eAAa,+BAAjB,CAvBc,CAuBoB;AAClC,oBAAIC,SAAOD,aAAaE,MAAb,CAAoBL,OAApB,CAAX;;AAEG,oBAAIlC,OAAK;AACL6B,0BAAKA,IADA;AAELC,2BAAMA,KAFD;AAGLC,8BAASA,QAHJ;AAILC,2BAAMA,KAJD;AAKLC,4BAAOA,MALF;AAMLC,6BAAQA,OANH;AAOLC,8BAASA,QAPJ;AAQRK,2BAAMF,SAAOA,OAAO,CAAP,CAAP,GAAiB,EARf,CAQmB;AARnB,iBAAT;;AAWA,oBAAGX,SAAO,CAAV,EAAY;AAAC;AACT,wBAAIc,YAAU,MAAM,OAAK9C,aAAL,CAAmBwB,KAAnB,CAAyB,EAAC,cAAaQ,MAAd,EAAzB,EAAgDe,QAAhD,CAAyD1C,IAAzD,CAApB;AACA,wBAAG,CAACyC,SAAJ,EAAc;AACV,+BAAKL,IAAL,CAAU,GAAV,EAAc,QAAd;AACH,qBAFD,MAGI;AACA,+BAAKO,OAAL,CAAa,EAAC3C,MAAKyC,SAAN,EAAb,EAA8B,QAA9B;AACH;AACJ,iBARD,MAQK;AAAC;AACF,wBAAIA,YAAU,MAAM,OAAK9C,aAAL,CAAmBiD,UAAnB,CAA8B5C,IAA9B,CAApB;AACA,wBAAG,CAACyC,SAAJ,EAAc;AACV,+BAAKL,IAAL,CAAU,GAAV,EAAc,QAAd;AACH,qBAFD,MAGI;AACA,+BAAKO,OAAL,CAAa,EAAC3C,MAAKyC,SAAN,EAAb,EAA8B,QAA9B;AACH;AACJ;AAGJ;AAzDc;AA0DlB;AACD;;;AAGMI,gBAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAG,OAAKC,KAAR,EAAc;AACV,oBAAI7B,SAAO,OAAKlB,GAAL,CAAS,SAAT,CAAX;AACA,oBAAIgD,SAAO,MAAM,OAAKpD,aAAL,CAAmBwB,KAAnB,CAAyB,EAAC,cAAaF,MAAd,EAAzB,EAAgD+B,MAAhD,EAAjB;AACA,oBAAG,CAACD,MAAJ,EAAW;AACP,2BAAKX,IAAL,CAAU,GAAV,EAAc,QAAd;AACH,iBAFD,MAGI;AACA,2BAAKO,OAAL,CAAa,EAAC3C,MAAK+C,MAAN,EAAb,EAA2B,QAA3B;AACH;AACJ;AAVe;AAWnB;AA1H+B,CAApC",
    "file": "..\\..\\..\\src\\admin\\controller\\news.js",
    "sourcesContent": [
        "//const ThinkUeditor=require('think-ueditor');\nconst ThinkUeditor=require('../common_function/ueditor/index');  //引入本地的文件 方便修改配置 **百度编辑器\nconst pagination = require('think-pagination');\nimport commonFun from \"../common_function/common_function.js\";//自定义类 里面有自定义函数\nconst Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    /*\n     * 构造函数 便于使用model文件\n     * */\n    constructor(...args) {\n        super(...args);//调用父级的 constructor 方法\n        this.modelInstance = this.model('news'); //增加一个方法\n    }\n  /*文章列表*/\n  async indexAction() {\n      //分页查询列表\n      let pageIndex=this.get('page');\n      const data = await this.modelInstance.indexList(pageIndex);\n      const html = pagination(data, this.ctx, {\n          desc: false, //show description\n          pageNum: 2,\n          url: '', //page url, when not set, it will auto generated\n          class: '', //pagenation extra class\n          text: {\n              next: '下一页',\n              prev: '上一页',\n              total: 'count: __COUNT__ , pages: __PAGE__'\n          }\n      });\n      this.assign({'pagination':html,'news_list':data});\n      return this.display();\n  }\n  /*\n  * 发布新闻显示页面\n  * */\n    async addAction(){\n        let sortList=await this.model('news_sort').select();\n        this.assign('sortList',sortList);\n        let newsId=this.get('news-id');\n        if(newsId){//有文章id 则是编辑页面 从news表根据id查询数据\n            let newsData=await this.modelInstance.where({'article_id':newsId}).find();\n            this.assign('newsData',newsData);\n        }\n        return this.display();\n    }\n    uploadAction(){\n        //百度编辑器\n        const ueditor = new ThinkUeditor(this.ctx);\n        this.json(ueditor.init());\n    }\n\n    /*\n    * 提交新增/编辑文章\n    * */\n    async doaddAction(){\n        if(this.isPost){\n            let editId=this.post('editId');\n            let sort=this.post('sort');\n            let title=this.post('title');\n            let subTitle=this.post('subTitle');\n            let intro=this.post('intro');\n            let author=this.post('author');\n            let content=this.post('content');\n            let copyfrom=this.post('copyfrom');\n            if(!sort || sort==''){\n                this.fail(403,'文章分类不能为空');\n                return false;\n            }\n            if(!title || title==''){\n                this.fail(403,'文章标题不能为空');\n                return false;\n            }\n            if(!content||content==''){\n                this.fail(403,'文章内容不能为空');\n                return false;\n            }\n\t        //取出内容中的img 标签 地址\n\n\t        let commonFunion=new commonFun(); //需要new一下才能用\n\t        let imgSrc=commonFunion.getSrc(content);\n\n            let data={\n                sort:sort,\n                title:title,\n                subTitle:subTitle,\n                intro:intro,\n                author:author,\n                content:content,\n                copyfrom:copyfrom,\n\t            thumb:imgSrc?imgSrc[0]:''  //取内容的第一张图片为缩略图\n            };\n\n            if(editId>0){//编辑文章\n                let artitleId=await this.modelInstance.where({'article_id':editId}).editNews(data);\n                if(!artitleId){\n                    this.fail(403,'编辑文章失败');\n                }\n                else{\n                    this.success({data:artitleId},'编辑文章成功');\n                }\n            }else{//新增文章\n                let artitleId=await this.modelInstance.addArticle(data);\n                if(!artitleId){\n                    this.fail(403,'添加文章失败');\n                }\n                else{\n                    this.success({data:artitleId},'添加文章成功');\n                }\n            }\n\n\n        }\n    }\n    /*\n    * 删除文章\n    * */\n    async deleteAction(){\n        if(this.isGet){\n            let newsId=this.get('news-id');\n            let dataId=await this.modelInstance.where({'article_id':newsId}).delete();\n            if(!dataId){\n                this.fail(403,'删除文章失败');\n            }\n            else{\n                this.success({data:dataId},'删除文章成功');\n            }\n        }\n    }\n};\n"
    ]
}