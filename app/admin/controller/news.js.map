{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\news.js"
    ],
    "names": [
        "ThinkUeditor",
        "require",
        "pagination",
        "fs",
        "path",
        "helper",
        "Jimp",
        "qiniu",
        "Base",
        "module",
        "exports",
        "constructor",
        "args",
        "modelInstance",
        "model",
        "indexAction",
        "pageIndex",
        "get",
        "data",
        "indexList",
        "html",
        "ctx",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "assign",
        "display",
        "addAction",
        "sortList",
        "select",
        "newsId",
        "newsData",
        "where",
        "find",
        "uploadAction",
        "ueditor",
        "json",
        "init",
        "uploadImgAction",
        "file",
        "type",
        "filepath",
        "nameArr",
        "name",
        "split",
        "basename",
        "length",
        "YYYYMMDD",
        "datetime",
        "Date",
        "now",
        "staticPath",
        "resolve",
        "think",
        "ROOT_PATH",
        "uploadSlidePath",
        "uploadPath",
        "relativePath",
        "existsSync",
        "mkdirSync",
        "renameSync",
        "datuPath",
        "read",
        "then",
        "lenna",
        "cover",
        "quality",
        "autocrop",
        "write",
        "catch",
        "err",
        "console",
        "error",
        "success",
        "errmsg",
        "img_path",
        "img_path_thumb",
        "title",
        "original",
        "uploadQiniuAction",
        "localFile",
        "log",
        "slideshow",
        "service",
        "result",
        "putfileQiniu",
        "msg",
        "doaddAction",
        "isPost",
        "editId",
        "post",
        "sort",
        "subTitle",
        "intro",
        "author",
        "content",
        "copyfrom",
        "thumb",
        "fail",
        "newsThumb",
        "field",
        "deleteQiniuImg",
        "artitleId",
        "editNews",
        "addArticle",
        "deleteAction",
        "isGet",
        "news_img",
        "dataId",
        "delete",
        "cleanImgAction",
        "imgUrl",
        "slide_img"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\news.js",
    "sourcesContent": [
        "/*\r\n * 图片上传 上传至七牛，不在上传至本地文件夹\r\n * 百度编辑器上传的图片目前还是只能存在本地目录，\r\n * 轮播图和新闻的缩略图是存在七牛\r\n * */\r\n//const ThinkUeditor=require('think-ueditor');\r\nconst ThinkUeditor=require('../common_function/ueditor/index');  //引入本地的文件 方便修改配置 **百度编辑器\r\nconst pagination = require('think-pagination');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst helper = require('think-helper');\r\nconst Jimp = require(\"jimp\");\r\nconst qiniu=require('qiniu');\r\n//import commonFun from \"../common_function/common_function.js\";//自定义类 里面有自定义函数\r\nconst Base = require('./base.js');\r\n\r\nmodule.exports = class extends Base {\r\n    /*\r\n     * 构造函数 便于使用model文件\r\n     * */\r\n    constructor(...args) {\r\n        super(...args);//调用父级的 constructor 方法\r\n        this.modelInstance = this.model('news'); //增加一个方法\r\n    }\r\n  /*文章列表*/\r\n  async indexAction() {\r\n      //分页查询列表\r\n      let pageIndex=this.get('page');\r\n      const data = await this.modelInstance.indexList(pageIndex);\r\n      const html = pagination(data, this.ctx, {\r\n          desc: false, //show description\r\n          pageNum: 2,\r\n          url: '', //page url, when not set, it will auto generated\r\n          class: '', //pagenation extra class\r\n          text: {\r\n              next: '下一页',\r\n              prev: '上一页',\r\n              total: 'count: __COUNT__ , pages: __PAGE__'\r\n          }\r\n      });\r\n      this.assign({'pagination':html,'news_list':data});\r\n      return this.display();\r\n  }\r\n  /*\r\n  * 发布新闻显示页面\r\n  * */\r\n    async addAction(){\r\n        let sortList=await this.model('news_sort').select();\r\n        this.assign('sortList',sortList);\r\n        let newsId=this.get('news-id');\r\n        if(newsId){//有文章id 则是编辑页面 从news表根据id查询数据\r\n            let newsData=await this.modelInstance.where({'article_id':newsId}).find();\r\n            this.assign('newsData',newsData);\r\n        }\r\n        return this.display();\r\n    }\r\n    uploadAction(){\r\n        //百度编辑器\r\n        const ueditor = new ThinkUeditor(this.ctx);\r\n        this.json(ueditor.init());\r\n    }\r\n    /*\r\n    * 缩略图上传到本地文件夹（弃用）\r\n    * */\r\n\tasync uploadImgAction(){\r\n\t\tlet file=this.ctx.file('file');//获取文件\r\n\r\n\t\tif(file && file.type === 'image/png' || file.type === 'image/jpeg') {\r\n\t\t\tconst filepath = file.path;\r\n\t\t\tconst nameArr = file.name.split('.');\r\n\t\t\tconst basename = path.basename(filepath) + '.' + nameArr[nameArr.length - 1];\r\n\t\t\tconst YYYYMMDD = helper.datetime(Date.now(), 'YYYYMMDD');\r\n\t\t\tconst staticPath = path.resolve(think.ROOT_PATH, 'www/static');\r\n\t\t\tconst uploadSlidePath=path.resolve(staticPath, 'upload');\r\n\t\t\tconst uploadPath = path.resolve(uploadSlidePath, 'news');\r\n\t\t\tconst relativePath = path.resolve(uploadPath, YYYYMMDD);\r\n\r\n\t\t\t// 文件夹不存在则创建\r\n\t\t\tif (!fs.existsSync(uploadSlidePath)) {\r\n\t\t\t\tfs.mkdirSync(uploadSlidePath);\r\n\t\t\t}\r\n\t\t\tif (!fs.existsSync(uploadPath)) {\r\n\t\t\t\tfs.mkdirSync(uploadPath);\r\n\t\t\t}\r\n\r\n\t\t\tif (!fs.existsSync(relativePath)) {\r\n\t\t\t\tfs.mkdirSync(relativePath);\r\n\t\t\t}\r\n\r\n\t\t\tfs.renameSync(filepath, path.resolve(relativePath, `${basename}`));\r\n\r\n\t\t\tlet datuPath=`${think.ROOT_PATH}/www/static/upload/news/${YYYYMMDD}/${basename}`;\r\n\r\n\t\t\tif(datuPath){\r\n\t\t\t\t//处理缩略图\r\n\t\t\t\tJimp.read(datuPath).then(function (lenna) {\r\n\t\t\t\t\tlenna.cover(320,320)     // resize\r\n\t\t\t\t\t.quality(60)         // set JPEG quality\r\n\t\t\t\t\t.autocrop()\r\n\t\t\t\t\t.write(`${think.ROOT_PATH}/www/static/upload/news/${YYYYMMDD}/${path.basename(filepath)}.${nameArr[nameArr.length - 1]}`); // 另存为图片文件，在这里 文件名和上传文件名一致，覆盖原图 只存缩略图，不需要原图\r\n\t\t\t\t}).catch(function (err) {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.json({\r\n\t\t\t\tsuccess:true,\r\n\t\t\t\terrmsg:'上传成功',\r\n\t\t\t\tdata:{\r\n\t\t\t\t\timg_path:`/static/upload/news/${YYYYMMDD}/${basename}`,\r\n\t\t\t\t\timg_path_thumb:`/static/upload/news/${YYYYMMDD}/${path.basename(filepath)}.${nameArr[nameArr.length - 1]}`,\r\n\t\t\t\t\ttitle: basename,\r\n\t\t\t\t\toriginal: file.name\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\tthis.json({\r\n\t\t\t\tsuccess:true,\r\n\t\t\t\terrmsg:'上传失败',\r\n\t\t\t\tdata:[]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t * 上传图片到七牛服务器\r\n\t * */\r\n\tasync uploadQiniuAction(){\r\n\t\tlet file=this.ctx.file('file');//获取文件\r\n\t\tif(file && file.type === 'image/png' || file.type === 'image/jpeg'){\r\n\t\t\tlet localFile = file.path;//上传文件\r\n\t\t\tconst nameArr = file.name.split('.');\r\n\t\t\tconst YYYYMMDD = helper.datetime(Date.now(), 'YYYYMMDD');\r\n\t\t\tconst basename = 'news_'+YYYYMMDD+'_'+path.basename(localFile) + '.' + nameArr[nameArr.length - 1]; //新名称\r\n\t\t\tconsole.log('文件路径',localFile)\r\n\t\t\t// 文件上传\r\n\t\t\tlet slideshow=think.service('slideshow', 'admin');\r\n\t\t\tlet result=await slideshow.putfileQiniu(localFile, basename);\r\n\t\t\tif(result.msg=='success'){\r\n\t\t\t\t//上传成功\r\n\t\t\t\tthis.json({\r\n\t\t\t\t\tsuccess:true,\r\n\t\t\t\t\terrmsg:'上传成功',\r\n\t\t\t\t\tdata:result.data\r\n\t\t\t\t});\r\n\t\t\t}else if(result.msg=='error_1'){\r\n\t\t\t\tthis.json({\r\n\t\t\t\t\tsuccess:false,\r\n\t\t\t\t\terrmsg:'上传失败',\r\n\t\t\t\t\tdata:[]\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis.json({\r\n\t\t\t\t\tsuccess:false,\r\n\t\t\t\t\terrmsg:'上传失败',\r\n\t\t\t\t\tdata:result.data\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}else {\r\n\t\t\tthis.json({\r\n\t\t\t\tsuccess:false,\r\n\t\t\t\terrmsg:'上传失败',\r\n\t\t\t\tdata:[]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n    /*\r\n    * 提交新增/编辑文章\r\n    * */\r\n    async doaddAction(){\r\n        if(this.isPost){\r\n            let editId=this.post('editId');\r\n            let sort=this.post('sort');\r\n            let title=this.post('title');\r\n            let subTitle=this.post('subTitle');\r\n            let intro=this.post('intro');\r\n            let author=this.post('author');\r\n            let content=this.post('content');\r\n            let copyfrom=this.post('copyfrom');\r\n            let thumb=this.post('img_path_thumb');\r\n            if(!sort || sort==''){\r\n                this.fail(403,'文章分类不能为空');\r\n                return false;\r\n            }\r\n            if(!title || title==''){\r\n                this.fail(403,'文章标题不能为空');\r\n                return false;\r\n            }\r\n            if(!content||content==''){\r\n                this.fail(403,'文章内容不能为空');\r\n                return false;\r\n            }\r\n\t        //取出内容中的img 标签 地址\r\n\r\n\t        //let commonFunion=new commonFun(); //需要new一下才能用\r\n\t        //let imgSrc=commonFunion.getSrc(content);  不需要从内容中提取图片\r\n\r\n            let data={\r\n                sort:sort,\r\n                title:title,\r\n                subTitle:subTitle,\r\n                intro:intro,\r\n                author:author,\r\n                content:content,\r\n                copyfrom:copyfrom,\r\n\t            thumb:thumb\r\n            };\r\n\r\n            if(editId!=0 || editId!='0'){//编辑文章\r\n\t            let newsThumb=await this.modelInstance.where({'article_id':editId}).field('thumb').find();\r\n\t            if(thumb!=newsThumb.thumb){ //如果提交过来的图片路径和数据库的不一致，则是修改了图片\r\n\t\t            // 检测文件是否存在\r\n\t\t            /*let filePath=think.ROOT_PATH+'/www'+slide_img.slide_img;  //图片的路径\r\n\t\t             if(fs.existsSync(filePath)) { //如果存在则删除图片\r\n\t\t             fs.unlinkSync(filePath);\r\n\t\t             }*/\r\n\t\t            //从先删除已经存在的图片\r\n\t\t            let slideshow=think.service('slideshow', 'admin');\r\n\t\t            let result=await slideshow.deleteQiniuImg(newsThumb.thumb);\r\n\r\n\t            }\r\n\r\n\r\n                let artitleId=await this.modelInstance.where({'article_id':editId}).editNews(data);\r\n\r\n                if(!artitleId){\r\n                    this.fail(403,'编辑文章失败');\r\n                }\r\n                else{\r\n                    this.success({data:artitleId},'编辑文章成功');\r\n                }\r\n            }else{//新增文章\r\n                let artitleId=await this.modelInstance.addArticle(data);\r\n                if(!artitleId){\r\n                    this.fail(403,'添加文章失败');\r\n                }\r\n                else{\r\n                    this.success({data:artitleId},'添加文章成功');\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    /*\r\n    * 删除文章\r\n    * */\r\n    async deleteAction(){\r\n    \t//删除文章时 需同时删除上传的图片\r\n        if(this.isGet){\r\n            let newsId=this.get('news-id');\r\n\t        //let news_img=await this.modelInstance.where({'article_id':newsId}).field('thumb').find();\r\n\r\n\t        //循环遍历对象\r\n\t        /*if(news_img){\r\n\t\t        for (let i in news_img) {\r\n\t\t\t        if (news_img.hasOwnProperty(i) === true) {\r\n\t\t\t\t        // 检测文件是否存在 删除大图和缩略图\r\n\t\t\t\t        let filePath=think.ROOT_PATH+'/www'+news_img[i];  //图片的路径\r\n\t\t\t\t        if(fs.existsSync(filePath)) { //如果存在则删除图片\r\n\t\t\t\t\t        fs.unlinkSync(filePath);\r\n\t\t\t\t        }\r\n\t\t\t        }\r\n\t\t        }\r\n\t        }*/\r\n\t        let news_img=await this.modelInstance.where({'article_id':newsId}).field('thumb').find();\r\n\r\n\t        if(news_img.thumb){//如果存在缩略图，则去七牛云删除\r\n//去七牛删除文件\r\n\t\t        let slideshow=think.service('slideshow', 'admin');\r\n\t\t        //当删除七牛图片成功时才删除数据库记录\r\n\t\t        let result=await slideshow.deleteQiniuImg(news_img.thumb);  //只取 除域名外的部分\r\n\t\t        /*if(result.msg!='success'){\r\n\t\t\t        this.fail(403,'删除缩略图失败');\r\n\t\t        }*/\r\n\t        }\r\n\r\n\r\n            let dataId=await this.modelInstance.where({'article_id':newsId}).delete();\r\n            if(!dataId){\r\n                this.fail(403,'删除文章失败');\r\n            }\r\n            else{\r\n                this.success({data:dataId},'删除文章成功');\r\n            }\r\n        }\r\n    }\r\n\t/*\r\n\t * 关闭浏览器时若没有点击提交按钮，则清除已经上传的图片\r\n\t * */\r\n\tasync cleanImgAction(){\r\n\t\tlet imgUrl=this.get('imgUrl');\r\n\t\tif(!imgUrl){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet slide_img=await this.modelInstance.where({'thumb':imgUrl}).select();\r\n\r\n\t\tif(slide_img.length<=0){ //如果数据库里找不到，则是用户还没保存此文章，那么此时用户离开了浏览器，则需要删除七牛的已经上传的文件\r\n\t\t\tlet slideshow=think.service('slideshow', 'admin');\r\n\t\t\tlet result=await slideshow.deleteQiniuImg(imgUrl);\r\n\t\t}\r\n\r\n\t}\r\n};\r\n"
    ]
}