{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\news.js"
    ],
    "names": [
        "ThinkUeditor",
        "require",
        "pagination",
        "fs",
        "path",
        "helper",
        "Jimp",
        "Base",
        "module",
        "exports",
        "constructor",
        "args",
        "modelInstance",
        "model",
        "indexAction",
        "pageIndex",
        "get",
        "data",
        "indexList",
        "html",
        "ctx",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "assign",
        "display",
        "addAction",
        "sortList",
        "select",
        "newsId",
        "newsData",
        "where",
        "find",
        "uploadAction",
        "ueditor",
        "json",
        "init",
        "uploadImgAction",
        "file",
        "type",
        "filepath",
        "nameArr",
        "name",
        "split",
        "basename",
        "length",
        "YYYYMMDD",
        "datetime",
        "Date",
        "now",
        "staticPath",
        "resolve",
        "think",
        "ROOT_PATH",
        "uploadSlidePath",
        "uploadPath",
        "relativePath",
        "existsSync",
        "mkdirSync",
        "renameSync",
        "datuPath",
        "read",
        "then",
        "lenna",
        "cover",
        "quality",
        "autocrop",
        "write",
        "catch",
        "err",
        "console",
        "error",
        "success",
        "errmsg",
        "img_path",
        "img_path_thumb",
        "title",
        "original",
        "doaddAction",
        "isPost",
        "editId",
        "post",
        "sort",
        "subTitle",
        "intro",
        "author",
        "content",
        "copyfrom",
        "thumb",
        "fail",
        "artitleId",
        "editNews",
        "addArticle",
        "deleteAction",
        "isGet",
        "news_img",
        "field",
        "i",
        "hasOwnProperty",
        "filePath",
        "unlinkSync",
        "dataId",
        "delete"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\news.js",
    "sourcesContent": [
        "//const ThinkUeditor=require('think-ueditor');\nconst ThinkUeditor=require('../common_function/ueditor/index');  //引入本地的文件 方便修改配置 **百度编辑器\nconst pagination = require('think-pagination');\nconst fs = require('fs');\nconst path = require('path');\nconst helper = require('think-helper');\nconst Jimp = require(\"jimp\");\n//import commonFun from \"../common_function/common_function.js\";//自定义类 里面有自定义函数\nconst Base = require('./base.js');\n\nmodule.exports = class extends Base {\n    /*\n     * 构造函数 便于使用model文件\n     * */\n    constructor(...args) {\n        super(...args);//调用父级的 constructor 方法\n        this.modelInstance = this.model('news'); //增加一个方法\n    }\n  /*文章列表*/\n  async indexAction() {\n      //分页查询列表\n      let pageIndex=this.get('page');\n      const data = await this.modelInstance.indexList(pageIndex);\n      const html = pagination(data, this.ctx, {\n          desc: false, //show description\n          pageNum: 2,\n          url: '', //page url, when not set, it will auto generated\n          class: '', //pagenation extra class\n          text: {\n              next: '下一页',\n              prev: '上一页',\n              total: 'count: __COUNT__ , pages: __PAGE__'\n          }\n      });\n      this.assign({'pagination':html,'news_list':data});\n      return this.display();\n  }\n  /*\n  * 发布新闻显示页面\n  * */\n    async addAction(){\n        let sortList=await this.model('news_sort').select();\n        this.assign('sortList',sortList);\n        let newsId=this.get('news-id');\n        if(newsId){//有文章id 则是编辑页面 从news表根据id查询数据\n            let newsData=await this.modelInstance.where({'article_id':newsId}).find();\n            this.assign('newsData',newsData);\n        }\n        return this.display();\n    }\n    uploadAction(){\n        //百度编辑器\n        const ueditor = new ThinkUeditor(this.ctx);\n        this.json(ueditor.init());\n    }\n    /*\n    * 缩略图上传\n    * */\n\tasync uploadImgAction(){\n\t\tlet file=this.ctx.file('file');//获取文件\n\n\t\tif(file && file.type === 'image/png' || file.type === 'image/jpeg') {\n\t\t\tconst filepath = file.path;\n\t\t\tconst nameArr = file.name.split('.');\n\t\t\tconst basename = path.basename(filepath) + '.' + nameArr[nameArr.length - 1];\n\t\t\tconst YYYYMMDD = helper.datetime(Date.now(), 'YYYYMMDD');\n\t\t\tconst staticPath = path.resolve(think.ROOT_PATH, 'www/static');\n\t\t\tconst uploadSlidePath=path.resolve(staticPath, 'upload');\n\t\t\tconst uploadPath = path.resolve(uploadSlidePath, 'news');\n\t\t\tconst relativePath = path.resolve(uploadPath, YYYYMMDD);\n\n\t\t\t// 文件夹不存在则创建\n\t\t\tif (!fs.existsSync(uploadSlidePath)) {\n\t\t\t\tfs.mkdirSync(uploadSlidePath);\n\t\t\t}\n\t\t\tif (!fs.existsSync(uploadPath)) {\n\t\t\t\tfs.mkdirSync(uploadPath);\n\t\t\t}\n\n\t\t\tif (!fs.existsSync(relativePath)) {\n\t\t\t\tfs.mkdirSync(relativePath);\n\t\t\t}\n\n\t\t\tfs.renameSync(filepath, path.resolve(relativePath, `${basename}`));\n\n\t\t\tlet datuPath=`${think.ROOT_PATH}/www/static/upload/news/${YYYYMMDD}/${basename}`;\n\n\t\t\tif(datuPath){\n\t\t\t\t//处理缩略图\n\t\t\t\tJimp.read(datuPath).then(function (lenna) {\n\t\t\t\t\tlenna.cover(320,320)     // resize\n\t\t\t\t\t.quality(60)         // set JPEG quality\n\t\t\t\t\t.autocrop()\n\t\t\t\t\t.write(`${think.ROOT_PATH}/www/static/upload/news/${YYYYMMDD}/${path.basename(filepath)}.${nameArr[1]}`); // 另存为图片文件，在这里 文件名和上传文件名一致，覆盖原图 只存缩略图，不需要原图\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.json({\n\t\t\t\tsuccess:true,\n\t\t\t\terrmsg:'上传成功',\n\t\t\t\tdata:{\n\t\t\t\t\timg_path:`/static/upload/news/${YYYYMMDD}/${basename}`,\n\t\t\t\t\timg_path_thumb:`/static/upload/news/${YYYYMMDD}/${path.basename(filepath)}.${nameArr[1]}`,\n\t\t\t\t\ttitle: basename,\n\t\t\t\t\toriginal: file.name\n\t\t\t\t}\n\t\t\t});\n\n\t\t}else{\n\t\t\tthis.json({\n\t\t\t\tsuccess:true,\n\t\t\t\terrmsg:'上传失败',\n\t\t\t\tdata:[]\n\t\t\t});\n\t\t}\n\t}\n\n    /*\n    * 提交新增/编辑文章\n    * */\n    async doaddAction(){\n        if(this.isPost){\n            let editId=this.post('editId');\n            let sort=this.post('sort');\n            let title=this.post('title');\n            let subTitle=this.post('subTitle');\n            let intro=this.post('intro');\n            let author=this.post('author');\n            let content=this.post('content');\n            let copyfrom=this.post('copyfrom');\n            let thumb=this.post('img_path_thumb');\n            if(!sort || sort==''){\n                this.fail(403,'文章分类不能为空');\n                return false;\n            }\n            if(!title || title==''){\n                this.fail(403,'文章标题不能为空');\n                return false;\n            }\n            if(!content||content==''){\n                this.fail(403,'文章内容不能为空');\n                return false;\n            }\n\t        //取出内容中的img 标签 地址\n\n\t        //let commonFunion=new commonFun(); //需要new一下才能用\n\t        //let imgSrc=commonFunion.getSrc(content);  不需要从内容中提取图片\n\n            let data={\n                sort:sort,\n                title:title,\n                subTitle:subTitle,\n                intro:intro,\n                author:author,\n                content:content,\n                copyfrom:copyfrom,\n\t            thumb:thumb  //取内容的第一张图片为缩略图\n            };\n\n            if(editId>0){//编辑文章\n                let artitleId=await this.modelInstance.where({'article_id':editId}).editNews(data);\n                if(!artitleId){\n                    this.fail(403,'编辑文章失败');\n                }\n                else{\n                    this.success({data:artitleId},'编辑文章成功');\n                }\n            }else{//新增文章\n                let artitleId=await this.modelInstance.addArticle(data);\n                if(!artitleId){\n                    this.fail(403,'添加文章失败');\n                }\n                else{\n                    this.success({data:artitleId},'添加文章成功');\n                }\n            }\n\n\n        }\n    }\n    /*\n    * 删除文章\n    * */\n    async deleteAction(){\n    \t//删除文章时 需同时删除上传的图片\n        if(this.isGet){\n            let newsId=this.get('news-id');\n\t        let news_img=await this.modelInstance.where({'article_id':newsId}).field('thumb').find();\n\n\t        //循环遍历对象\n\t        if(news_img){\n\t\t        for (let i in news_img) {\n\t\t\t        if (news_img.hasOwnProperty(i) === true) {\n\t\t\t\t        // 检测文件是否存在 删除大图和缩略图\n\t\t\t\t        let filePath=think.ROOT_PATH+'/www'+news_img[i];  //图片的路径\n\t\t\t\t        if(fs.existsSync(filePath)) { //如果存在则删除图片\n\t\t\t\t\t        fs.unlinkSync(filePath);\n\t\t\t\t        }\n\t\t\t        }\n\t\t        }\n\t        }\n\n            let dataId=await this.modelInstance.where({'article_id':newsId}).delete();\n            if(!dataId){\n                this.fail(403,'删除文章失败');\n            }\n            else{\n                this.success({data:dataId},'删除文章成功');\n            }\n        }\n    }\n};\n"
    ]
}